---
kind: pipeline
type: kubernetes
name: default

# Common step to inject the Docker image for the required Node version.
# Override by setting `builder_node_version` in `.globality/build.json`.
image: &image
  image: node:20.16.0

steps:

  # Add CodeArtifact credentials to `.npmrc` so that:
  # - we can access other private dependencies stored there
  # - we can publish the package (modules shouldn't be publicly shared on NPM)
  - name: authenticate-codeartifact
    <<: *image
    environment:
      CODEARTIFACT_AUTH_TOKEN:
        from_secret: CODEARTIFACT_AUTH_TOKEN
    commands:
      - echo "registry=https://globality-308798440167.d.codeartifact.us-east-1.amazonaws.com/npm/globality-npm-local/" > .npmrc
      - echo "//globality-308798440167.d.codeartifact.us-east-1.amazonaws.com/npm/globality-npm-local/:always-auth=true" >> .npmrc
      - echo "//globality-308798440167.d.codeartifact.us-east-1.amazonaws.com/npm/globality-npm-local/:_authToken=$CODEARTIFACT_AUTH_TOKEN" >> .npmrc

  # Install dependencies (first and third party) from NPM and Codeartifact
  - name: install-node-dependencies
    <<: *image
    commands:
      - yarn install
    depends_on:
      - authenticate-codeartifact

  # Next three steps run in parallel
  #               ↓
  #     ┌─────────┼──────────┐
  #  ╔══╧═══╗  ╔══╧═══╗  ╔═══╧═══╗
  #  ║ lint ║  ║ test ║  ║ build ║
  #  ╚══╤═══╝  ╚══╤═══╝  ╚═══╤═══╝
  #     └─────────┼──────────┘
  #               ↓

  - name: lint
    <<: *image
    commands:
      - yarn lint
    depends_on:
      - install-node-dependencies

  - name: test
    <<: *image
    commands:
      - yarn test
    depends_on:
      - install-node-dependencies

  - name: build
    <<: *image
    commands:
      - yarn build
    depends_on:
      - install-node-dependencies

  # We now have a choice:
  # - (normally) publish a `dev` build with the build number in the version
  # - we can optionally publish a `latest` (release) build from a git tag
  #          ↓
  #     ┏━━━━┹─────┐
  #  ╔══╧══╗  ╔════╧════╗
  #  ║ dev ║  ║ release ║
  #  ╚═════╝  ╚═════════╝

  - name: publish-repository-dev
    <<: *image
    when:
      event:
        exclude:
          - tag
    commands:
      - npm config fix
      # Mangle the `version` in `package.json` to append `-dev.nnn` where `nnn`
      # is the build number.
      - sed -i "/version/s/\",/-dev.${DRONE_BUILD_NUMBER}\",/" package.json
      # Development builds are published with the `dev` tag.
      # https://docs.npmjs.com/cli/v7/commands/npm-dist-tag
      - npm publish --tag dev
    depends_on:
      - lint
      - test
      - build

  - name: publish-repository-release
    <<: *image
    when:
      event:
        - tag
    commands:
      - npm config fix
      # Releases are published with the `latest` tag.
      # https://docs.npmjs.com/cli/v7/commands/npm-dist-tag
      # > By default, the `latest` tag is used by npm to identify the current
      # > version of a package.
      - npm publish --tag latest
    depends_on:
      - lint
      - test
      - build

---
kind: secret
name: CODEARTIFACT_AUTH_TOKEN
get:
  path: secrets/dev/codeartifact
  name: CODEARTIFACT_AUTH_TOKEN
